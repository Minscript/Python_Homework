# Задайте последовательность чисел. Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.

# Очистка консоли и рандом
from os import system
from random import randint
system("cls")


# Указать размер и заполнить лист рандомом
def fill_list():
    lst = []
    len_lst = int(input("Задайте длинну списка: "))
    for i in range(len_lst):
        rand = randint(1, 9)
        lst.append(rand)
    return lst


lists = fill_list()
print(f"Задан список: {lists}")


def i_hate_repeat():
    lst = []
    for num in range(len(lists)):           # Сколько нужно проверок
        repeat_ = 0
        for index in range(len(lists)):     # Проверяем, есть ли ещё num в данном списке?
            if lists[num] == lists[index]:
                repeat_ += 1
        if repeat_ == 1:                    # Если такое число встретилось 1 раз, то мы добавим его в список
            lst.append(lists[num])
    return lst


new_lists = i_hate_repeat()
print(f"\nИз списка: {lists}   -   Неповторяются: {new_lists}\n")

# Возможно не самое оптимальное решение, так как одно и тоже число будет каждый раз повторять проверку.
#
# Условно: список может быть длинной 100, в нём может быть ~30 "1": [5, 6, 1, 1, 1, 3, 1, 1, 6, 2, 1, 1, 1, 1]
# Программа каждую "1" будет проверять на наличие повтора.
# Это можно исправить создав ещё один лист с "отсеиными числами" и проверять наличие числа сначало из него.
# Это будет оптимальным для списка большой длинны, но на маленьких достаточно и такого решения.